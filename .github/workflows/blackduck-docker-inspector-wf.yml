name: "blackduck docker inspector CI workflow"


on:
  push:
    branches: [ main ]
  schedule:
      - cron:  '0 0 1 * *' ##execution of a task in the first minute of the month 




jobs:

  blackduck-docker-inspector-ubuntu-latest-job:
    name: "blackduck docker inspector"
    runs-on: ubuntu-latest
    env:
      distribution: "alpine" 
      version: "latest"
      name: "ubuntu2104/apache2"
      dockerfiledir: "dockerfiles"
      dockerfilename: "Dockerfile.ubuntu2104.apache"         
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: |
        hostnamectl status
        lsb_release -a
        lsb_release -d
        cat /etc/lsb-release
        cat /etc/issue
        cat /etc/os-release
        sudo apt-get install -y neofetch && neofetch    
    - name: "blackduck docker inspector"
      run: |
        set -xe
        # destroyed afterwards (use --rm )
        # all subsequent Dockerfile commands generate new images and the cache is not used
        sudo docker build --no-cache --rm  -t ${name}:${version} . --file ${dockerfiledir}/${dockerfilename} 
        docker image ls
        docker image history ${name}:${version}
        docker system df -v               
        docker image inspect ${name}:${version} 
        # find ENTRYPOINT & CMD on an image
        docker inspect -f '{{.Config.Entrypoint}}' ${name}:${version}
        # https://github.com/blackducksoftware/blackduck-docker-inspector
        curl -O  https://blackducksoftware.github.io/blackduck-docker-inspector/blackduck-docker-inspector.sh
        chmod +x blackduck-docker-inspector.sh 
        bash blackduck-docker-inspector.sh  --upload.bdio=false --docker.image=${name}:${version}
        #  run Black Duck Docker Inspector without connecting to Black Duck 
        # bash <(curl -s https://blackducksoftware.github.io/blackduck-docker-inspector/blackduck-docker-inspector.sh) --upload.bdio=false --docker.image=alpine/nmap-nse-vuln:latest
